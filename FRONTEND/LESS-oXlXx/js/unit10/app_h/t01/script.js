const viewRatio = 20;
const maxVisitors = 100000
const maxViews = maxVisitors * viewRatio;
let visitors = randNumber(0, maxVisitors);
let views = randNumber(visitors, maxViews);
let viewsVisitorRadio = calcRatio(views, visitors);
let sessionSeconds = randNumber(1, 900);
let sessionViewRatio = calcRatio(sessionSeconds, viewsVisitorRadio);

function randNumber(randFrom, randTo) {
    const randRange = randTo - randFrom + 1;
    let rand = Math.random() * randRange;
    return Math.floor(rand) + randFrom;
}

console.log(`//////////////////////////////////`);
console.log('``````````````````````````````````');
console.log(`   статистика за 24 часа`);
console.log(``);
console.log(`посетители:      ${visitors}`);
console.log(`просмотры:       ${maxViews}`);
console.log(``);
console.log('``````````````````````````````````');
console.log(``);
console.log('..................................');
console.log(`среднее время одного просмотра:
                 ${midSecPerVis}s.`);
console.log('``````````````````````````````````');
console.log(``);
console.log(`----------------------------------`);
console.log(`~ \u{1F441}  на 1 пользователя: \x1b[32m${averageViews}\x1b[0m`);
console.log(`----------------------------------`);
console.log(``);
console.log(`среднее время проведенное
пользователем на сайте: ${randomSeconds}s.`);
console.log(``);
console.log(`//////////////////////////////////`);

// посетители (visitors): первый заход на сайт за последние 24 часа от одного уникального пользователя Сети
// просмотры (views) : все заходы на сайт за последние 24 часа. в том числе повторные заходы и обновления
// страниц от одного и того же уникального пользователя Сети

// логично, что просмотров(views) будет больше чем посетителей(visitors)
// реализовать модель, имитирующую работу счётчика посещаемости сайта за последние 24 часа.
// 1) сгенерировать случайное количестово посетителей (visitors) от 0 до 100 000
// 2) сгенерировать случайное количество просмотров (views). значение не должно превышать
// 20 просмотров на посетителя
// 3) на основании сгенерированных значений количества посетителей (visitors) и просмотров (views),
// посчитать среднее количество просмотров на посетителя. округлить до десятых

// 4) сгенерировать случайное количество времени в секундах, которое посетитель (visitors)
// проводит на сайте в среднем. от 1 секунды до 900 секунд

// 5) на основании сгенерированного времени нахождения посетителя(visitors) на сайте посчитать,
// сколько в среднем по времени занимает один просмотр (views). округлить до десятых
// логично, что среднее время на один просмотр (views) будет меньше, чем среднее время
// нахождения пользователя (visitors) на сайте. потому что на одного посетителя может быть несколько просмотров
